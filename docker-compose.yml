version: "3.5"

services:
  app: &app
    build:
      context: .dockerdev
      dockerfile: Dockerfile
      args:
          USER_ID: "${USER_ID:-1000}"
          GROUP_ID: "${GROUP_ID:-1000}"
          RUBY_VERSION: '2.7'
          PG_MAJOR: '11'
          NODE_MAJOR: '12'
          YARN_VERSION: '1.13.0'
          BUNDLER_VERSION: '2.0.2'
    image: ruby.oracle-client:1.0.0
    tmpfs:
      - /tmp

  backend: &backend
    <<: *app
    stdin_open: true
    tty: true
    #continue , step and frame .
    volumes:
      - .:/app
      # !!!! WARNING !!! For MacOs add this line. It does have a cost though
      # https://docs.docker.com/docker-for-mac/osxfs-caching/#cached
      # - .:/app:cached
      - rails_cache:/app/tmp/cache
      #- bundle:/bundle
      - bundle:/usr/local/bundle
      - node_modules:/app/node_modules
      - packs:/app/public/packs
      - .dockerdev/.psqlrc:/root/.psqlrc:ro
      - oracle:/usr/lib/oracle
    environment:
      - NODE_ENV=development
      - RAILS_ENV=${RAILS_ENV:-development}
      - DATABASE_URL=postgresql://prepaid:test_db_password@postgres:5432/prepaid?encoding=utf8&pool=5&timeout=5000
      - SECRET_KEY_BASE=b3d751554da5dc80be081fbf7b2a5ad0f5cfa71f5d8eaa07c012ca0f33d71f984e01c6cef1d1c97ebfa35c0e43a680f0da4acda1eef8bbdd8ca143fc82ad537a
      - REDIS_URL=redis://redis:6379/
      - INSMM_URL=http://insmm.kplc.local:81/smm-api/v1/public/sms-webhooks
      - BOOTSNAP_CACHE_DIR=/usr/local/bundle/_bootsnap
      - SIDEKIQ_USERNAME=dakello@kplc.co.ke
      - SIDEKIQ_PASSWORD=King603025008
      - WEBPACKER_DEV_SERVER_HOST=webpacker
      - WEB_CONCURRENCY=1
      - HISTFILE=/app/log/.bash_history
      - PSQL_HISTFILE=/app/log/.psql_history
      - EDITOR=vi
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  runner:
    <<: *backend
    command: /bin/bash
    ports:
      - '3000:3000'
      - '3002:3002'
    #networks:
    #  - proxy
  #command: bash -c “rm -f tmp/pids/server.pid && bundle exec puma -C config/puma.rb config.ru”
  rails:
    <<: *backend
    #command: bundle exec rails server -b 0.0.0.0
    command: bundle exec puma -C config/puma.rb
    #"bundle", "exec", "puma", "-C", "config/puma.rb"
    #networks:
    #  - proxy  # Change if you're using another network
    ports:
      - '3000:3000'
    #labels:
    #  - "traefik.docker.network=proxy"
    #  - "traefik.enable=true"
    #  - "traefik.frontend.rule=Host:localhost"
    #  - "traefik.backend.rule=rails"
    #  - "traefik.port=3000"
    #  - "traefik.protocol=safaricom"

  sidekiq:
    <<: *backend
    command: bundle exec sidekiq -C config/sidekiq.yml
    #networks:
    #  - proxy  # Change if you're using another network

  postgres:
    image: postgres:12.1
    environment:
      POSTGRES_USER: prepaid
      POSTGRES_PASSWORD: test_db_password
      PSQL_HISTFILE: /root/log/.psql_history
    ports:
      - '5432:5432'
    volumes:
      - .psqlrc:/root/.psqlrc:ro
      - postgres:/var/lib/postgresql/data
      - ./log:/root/log:cached
    healthcheck:
      test: pg_isready -U prepaid -h 127.0.0.1
      interval: 5s
    #networks:
    #  - proxy  # Change if you're using another network


  redis:
    image: redis:3.2-alpine
    volumes:
      - redis:/data
    ports:
      - 6379
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30
    #networks:
    #  - proxy  # Change if you're using another network
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    depends_on:
      - rails
    ports:
      - '80:80'

volumes:
  postgres:
  redis:
  oracle:
  bundle:
  node_modules:
  rails_cache:
  packs:

#networks:
  # Change if you're using another network
#  proxy:
#    external: true